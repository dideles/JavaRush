Task № 130 "Двоичный конвертер" (HARD)

Публичный статический метод toBinary() должен переводить строковое представление двоичного числа, полученное в качестве
входящего параметра, из десятичной системы счисления в двоичную и возвращать его строковое представление.

А публичный статический метод toDecimal() наоборот — из строкового представления двоичного числа в десятичное
число.

Методы работают только с положительными и не пустыми строками.

Если входящий параметр меньше или равен 0, метод toBinary() возвращает пустую строку.

Если входящий параметр — пустая строка или null, то метода toDecimal возвращают 0.

Твоя задача — реализовать эти методы.

Один из алгоритмов перевода десятичного числа в шестнадцатеричное следующий:
while(десятичное число не равно 0) {
    двоичное представление = остаток от деления десятичного числа на 2 + двоичное представление
    десятичное число = десятичное число / 2
}

Один из алгоритмов перевода двоичного числа в десятичное число следующий:
for(int i - 0; i < длина двоичного представления; i++) {
    десятичное число = десятиное число + число из двоичного представления * на 2 в степени i
}

Изначально берется крайнее правое число из двоичного представления.

С каждой итерацией цикла берется следующее число ближе к началу двоичного представления.

Подсказка: чтобы возвести число к степени можно использовать метод Math.pow(число, степень).

Метод main() не принимает участие в тестировании.


Требования:
1. Нужно, чтобы метод toBinary() был реализован согласно условию.
2. Нужно, чтобы метод toDecimal() был реализован согласно условию.
3. Методы Integer.toBinaryString() и Long.toHexString() использовать нельзя.
4. Методы Integer.parseInt() и Long.parseLong() использовать нельзя.
5. Методы Integer.toString() и Long.toString() использовать нельзя.
7. Объект типа BigInteger использовать нельзя.
8. Объект типа BigDecimal использовать нельзя.